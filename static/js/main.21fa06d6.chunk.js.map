{"version":3,"sources":["Components/HomePage/HomePage.module.css","Custom Hooks/useFetchApi.js","Components/HomePage/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","useFetchApi","url","useState","apiResults","setApiResults","isLoading","setIsLoading","useEffect","axios","get","then","res","data","Search","HomePage","movieData","setMovieData","searchedValue","setSearchedValue","searchedData","setSearchedData","className","classes","heading","loadingText","searchWrapper","type","value","onChange","e","target","trim","length","rawSearchedData","filter","Title","toLowerCase","includes","searchbox","placeholder","homepageCardsWrapper","map","item","Poster","Type","Year","imdbID","homepageCards","overlay","src","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,cAAgB,gCAAgC,UAAY,4BAA4B,UAAY,4BAA4B,YAAc,8BAA8B,qBAAuB,uCAAuC,cAAgB,gCAAgC,QAAU,4B,kHCE3U,SAASC,EAAYC,GAClC,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAaA,OAJAC,qBAAU,WAPRC,IAAMC,IAAIR,GAAKS,MAAK,SAACC,GAEnBP,EAAcO,EAAIC,KAAKC,QACvBP,GAAa,QAMd,CAACL,IAEG,CACLE,aACAE,a,2BCjBW,SAASS,IACtB,IACA,EAAkCd,EADtB,kDACJG,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,UACpB,EAAkCH,mBAASC,GAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KACA,EAA0Cd,mBAAS,IAAnD,mBAAOe,EAAP,KAAsBC,EAAtB,KACA,EAAwChB,mBAAS,IAAjD,mBAAOiB,EAAP,KAAqBC,EAArB,KAEAb,qBAAU,WACRS,EAAab,KACZ,CAACA,IAEJI,qBAAU,WACRS,EAAaG,KACZ,CAACA,IAoBJ,OACE,gCACE,oBAAIE,UAAWC,IAAQC,QAAvB,2BACClB,EACC,oBAAIgB,UAAWC,IAAQE,YAAvB,wBAEA,gCACE,qBAAKH,UAAWC,IAAQG,cAAxB,SACE,uBACEC,KAAK,OACLC,MAAOV,EACPW,SA7BS,SAACC,GACpB,IAAMF,EAAQE,EAAEC,OAAOH,MAEvB,GADAT,EAAiBS,GACbA,EAAMI,OAAOC,OAAS,EAAG,CAC3B,IAAMC,EAAkBlB,EAAUmB,QAAO,YACvC,QADsD,EAAZC,MAChCC,cAAcC,SAASV,EAAMS,kBAMzChB,EAAgBa,QAIhBjB,EAAab,IAeLkB,UAAWC,IAAQgB,UACnBC,YAAY,uBAIhB,qBAAKlB,UAAWC,IAAQkB,qBAAxB,SACGzB,EAAU0B,KAAI,SAACC,GACd,IAAQC,EAAsCD,EAAtCC,OAAQR,EAA8BO,EAA9BP,MAAOS,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,KAAiBH,EAAXI,OACnC,OACE,sBAAKzB,UAAWC,IAAQyB,cAAxB,UACE,sBAAK1B,UAAWC,IAAQ0B,QAAxB,UACE,6BAAKb,IACL,6BAAKS,IACL,4BAAIC,OAEN,qBAAKI,IAAKN,EAAQO,IAAKf,kBCpD1BgB,MARf,WACE,OACE,qBAAK9B,UAAU,MAAf,SACE,cAACP,EAAD,OCMSsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.21fa06d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"HomePage_heading__2GuC5\",\"searchWrapper\":\"HomePage_searchWrapper__xzM9R\",\"searchbox\":\"HomePage_searchbox__1rqqd\",\"searchBtn\":\"HomePage_searchBtn__2s-Pk\",\"loadingText\":\"HomePage_loadingText__35aaP\",\"homepageCardsWrapper\":\"HomePage_homepageCardsWrapper__1ztho\",\"homepageCards\":\"HomePage_homepageCards__2dZBM\",\"overlay\":\"HomePage_overlay__mHhjg\"};","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function useFetchApi(url) {\n  const [apiResults, setApiResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const loadData = () => {\n    axios.get(url).then((res) => {\n      //console.log(res.data.Search);\n      setApiResults(res.data.Search);\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [url]);\n\n  return {\n    apiResults,\n    isLoading,\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport useFetchApi from \"../../Custom Hooks/useFetchApi\";\nimport classes from \"./HomePage.module.css\";\nexport default function HomePage() {\n  const url = \"https://www.omdbapi.com/?apikey=45f0782a&s=war\";\n  const { apiResults, isLoading } = useFetchApi(url);\n  const [movieData, setMovieData] = useState(apiResults);\n  const [searchedValue, setSearchedValue] = useState(\"\");\n  const [searchedData, setSearchedData] = useState(\"\");\n  //console.log(apiResults);\n  useEffect(() => {\n    setMovieData(apiResults);\n  }, [apiResults]);\n\n  useEffect(() => {\n    setMovieData(searchedData);\n  }, [searchedData]);\n\n  const handleSearch = (e) => {\n    const value = e.target.value;\n    setSearchedValue(value);\n    if (value.trim().length > 0) {\n      const rawSearchedData = movieData.filter(({ Title }) => {\n        if (Title.toLowerCase().includes(value.toLowerCase())) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n      setSearchedData(rawSearchedData);\n      //setMovieData(searchedData);\n      //console.log(\"value changed\", value);\n    } else {\n      setMovieData(apiResults);\n    }\n  };\n  return (\n    <div>\n      <h1 className={classes.heading}>The Movie App</h1>\n      {isLoading ? (\n        <h1 className={classes.loadingText}>Loading...</h1>\n      ) : (\n        <div>\n          <div className={classes.searchWrapper}>\n            <input\n              type=\"text\"\n              value={searchedValue}\n              onChange={handleSearch}\n              className={classes.searchbox}\n              placeholder=\"enter movie name\"\n            />\n            {/* <button className={classes.searchBtn}>Search</button> */}\n          </div>\n          <div className={classes.homepageCardsWrapper}>\n            {movieData.map((item) => {\n              const { Poster, Title, Type, Year, imdbID } = item;\n              return (\n                <div className={classes.homepageCards}>\n                  <div className={classes.overlay}>\n                    <h2>{Title}</h2>\n                    <h3>{Type}</h3>\n                    <p>{Year}</p>\n                  </div>\n                  <img src={Poster} alt={Title} />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import \"./App.css\";\nimport HomePage from \"./Components/HomePage/HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}